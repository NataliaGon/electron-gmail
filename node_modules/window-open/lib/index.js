'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/* global window */

function stringify(obj) {
  var parts = [];
  Object.keys(obj).forEach(function (key) {
    parts.push(key + '=' + obj[key]);
  });
  return parts.join(',');
}

function configure() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var width = options.width || 640;
  var height = options.height || 480;
  return _extends({
    width: width,
    height: height,
    left: window.screenX + (window.outerWidth - width) / 2,
    top: window.screenY + (window.outerHeight - height) / 2.5
  }, options);
}

exports.default = function (url, options) {
  var str = stringify(configure(options));
  var popup = window.open(url, options.name || '', str);
  popup.focus();
  return popup;
};